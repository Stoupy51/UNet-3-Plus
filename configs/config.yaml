#WORK_DIR: "H:/Projects/UNet3P/"
WORK_DIR: ${hydra:runtime.cwd}

DATA_PREPARATION:
  # unprocessed scan data paths
  SCANS_TRAIN_DATA_PATH: "/data/Training Batch 2/"
  SCANS_VAL_DATA_PATH: "/data/Training Batch 1/"

  RESIZED_HEIGHT: ${INPUT.HEIGHT}
  RESIZED_WIDTH: ${INPUT.WIDTH}

  SCAN_MIN_VALUE: -200
  SCAN_MAX_VALUE: 250

DATASET:
  TRAIN:
    IMAGES_PATH: "/data/train/images"
    MASK_PATH: "/data/train/mask"
  VAL:
    IMAGES_PATH: "/data/val/images"
    MASK_PATH: "/data/val/mask"

SEED: 5
VERBOSE: 1
DATALOADER_WORKERS: 3  # number of workers used for data loading

INPUT:
  HEIGHT: 320
  WIDTH: 320
  CHANNELS: 3


OUTPUT:
  CLASSES: 2


#MODEL:
#  WEIGHTS_PATH: "/checkpoint"


#TRAINING_HYPER_PARAMETERS:
HYPER_PARAMETERS:
  EPOCHS: 5
  BATCH_SIZE: 2
  LEARNING_RATE: 1e-3


CALLBACKS:
  TENSORBOARD:
    TB_LOG_PATH: "/checkpoint/tb_logs"

  EARLY_STOPPING:
    PATIENCE: 20

  MODEL_CHECKPOINT:
    CHECKPOINT_PATH: "/checkpoint"
    SAVE_WEIGHTS_ONLY: True
    SAVE_BEST_ONLY: True

  CSV_LOGGER:
    CSV_LOG_PATH: "/checkpoint"
    APPEND_LOGS: False


PREPROCESS_DATA:
  #  RESIZE_IMAGE: False  # if True, resize to input height and width
  RESIZE:
    VALUE: False  # if True, resize to input height and width
    HEIGHT: ${INPUT.HEIGHT}
    WIDTH: ${INPUT.WIDTH}

  IMAGE_PREPROCESSING_TYPE: "normalize"

  NORMALIZE_MASK:
    VALUE: False
    NORMALIZE_VALUE: 255

  SHUFFLE:
    TRAIN:
      VALUE: True
    VAL:
      VALUE: False

USE_MULTI_GPUS:
  VALUE: False
  # GPU_IDS: Could be integer or list of integers.
  # In case Integer: if integer value is -1 then use all available gpus.
  # otherwise if positive number, then use given number of gpus.
  # In case list of Integer: each integer will be considered as gpu id
  # e.g. [4, 5, 7] means use gpu 5,6 and 8 for training
  GPU_IDS: -1


# to stop hydra from storing logs files
defaults:
  - _self_
  - override hydra/hydra_logging: disabled
  - override hydra/job_logging: disabled

hydra:
  output_subdir: null
